{"version":3,"file":"static/js/392.8147d62f.chunk.js","mappings":"gLAMA,EAJe,WACb,OAAO,SAACA,EAAA,EAAD,CAAeC,MAAM,c,+JCF9B,EAA2B,uBAA3B,EAA8D,wBAA9D,EAAkG,wBAAlG,EAAkI,oBAAlI,EAAkK,wBAAlK,EAAiM,mB,SC4EjM,EA1Ca,WACX,MA7BmB,WACnB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdN,EAAU,WAFI,UAGKO,EAAAA,EAAAA,IAAgBJ,GAHrB,OAGRN,EAHQ,OAIdC,EAAQD,GACRW,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAEZd,EAAU,YATI,kDAWdE,EAAS,EAAD,IACRF,EAAU,YAZI,0DAAH,qDAefM,MACC,CAACH,IACG,CAAEN,KAAAA,EAAMI,MAAAA,EAAOF,OAAAA,GAIUgB,GAAxBlB,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MAAOF,EAArB,EAAqBA,OACrB,OACE,gCACc,YAAXA,IAAwB,SAACiB,EAAA,EAAD,IACb,aAAXjB,IACCkB,EAAAA,EAAAA,IAAM,iDAAD,OAC8ChB,EAAMiB,SACvD,CACEC,KAAM,eACNC,MAAO,CACLC,aAAc,OACdC,WAAY,OACZ3B,MAAO,UAIH,aAAXI,IACC,eAAIwB,UAAWC,EAAf,SACG3B,EAAK4B,KAAI,SAAAC,GAAE,OACV,eAAuBH,UAAWC,EAAlC,UACE,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXG,IACED,EAAGE,aAAH,0CACuCF,EAAGE,cACtC,+EAENC,IAAKH,EAAGI,QAEV,eAAIP,UAAWC,EAAf,SAAwBE,EAAGI,QAC3B,eAAGP,UAAWC,EAAd,wBAAuCE,EAAGK,iBAZrCL,EAAGM,oBCrDjB,SAASC,IACd,OAAO,SAAC,EAAD,M,0MCDHC,EAAS,mCAEfC,IAAAA,SAAAA,QAAyB,+BAGlB,IAAMC,EAAc,mCAAG,oGACLD,IAAAA,IAAA,sCAAyCD,IADpC,cACtBG,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,qDAMdC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,gCACID,EADJ,kBACoBO,IAFd,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAQfG,EAAe,mCAAG,WAAMC,GAAN,uFACNR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAuCT,IADjC,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAMf/B,EAAe,mCAAG,WAAMoC,GAAN,uFACNR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,IAFV,cACvBG,EADuB,yBAItBA,EAASC,KAAKzC,MAJQ,2CAAH,sDAQf+C,EAAe,mCAAG,WAAMD,GAAN,uFACNR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,IAFV,cACvBG,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH","sources":["components/Loader/Loader.jsx","webpack://movie-search-app/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","pages/CastPage.jsx","services/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nconst Loader = () => {\n  return <SpinnerDotted color=\"#5e3e53\" />;\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"actorItem\":\"Cast_actorItem__fXEWx\",\"actorCard\":\"Cast_actorCard__1vCPH\",\"photo\":\"Cast_photo__lvFLf\",\"character\":\"Cast_character__tKDlA\",\"name\":\"Cast_name__6UbFm\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Loader from 'components/Loader';\nimport { getMovieCredits } from '../../services/api';\nimport s from './Cast.module.css';\n\nconst GetMovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setStatus('pending');\n        const cast = await getMovieCredits(movieId);\n        setCast(cast);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return { cast, error, status };\n};\n\nconst Cast = () => {\n  const { cast, error, status } = GetMovieCast();\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' &&\n        toast(\n          `Oops. Something went wrong. Please try again. ${error.message}`,\n          {\n            icon: 'ðŸ˜“',\n            style: {\n              borderRadius: '10px',\n              background: '#333',\n              color: '#fff',\n            },\n          }\n        )}\n      {status === 'resolved' && (\n        <ul className={s.castList}>\n          {cast.map(el => (\n            <li key={el.credit_id} className={s.actorItem}>\n              <div className={s.actorCard}>\n                <img\n                  className={s.photo}\n                  src={\n                    el.profile_path\n                      ? `https://image.tmdb.org/t/p/w200/${el.profile_path}`\n                      : 'http://www.axisplumbing.com.au/wp-content/uploads/2018/11/Avatar-200x300.jpg'\n                  }\n                  alt={el.name}\n                />\n                <h3 className={s.name}>{el.name}</h3>\n                <p className={s.character}>Character: {el.character}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import Cast from '../components/Cast';\n\nexport function CastPage() {\n  return <Cast />;\n}\n","import axios from 'axios';\n\nconst APIKey = '9cba2b56fa6de0f8781209edaebd8957';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//https://api.themoviedb.org/3/trending/movie/day?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${APIKey}`);\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=9cba2b56fa6de0f8781209edaebd8957&query=batman\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIKey}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/54657?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieDetails = async movieid => {\n  const response = await axios.get(`/movie/${movieid}?api_key=${APIKey}`);\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/453395/credits?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieCredits = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/credits?api_key=${APIKey}`\n  );\n  return response.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/453395/reviews?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieReviews = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/reviews?api_key=${APIKey}`\n  );\n  return response.data.results;\n};\n"],"names":["SpinnerDotted","color","useState","cast","setCast","status","setStatus","error","setError","movieId","useParams","useEffect","fetchCast","getMovieCredits","window","scrollTo","top","document","documentElement","scrollHeight","behavior","GetMovieCast","Loader","toast","message","icon","style","borderRadius","background","className","s","map","el","src","profile_path","alt","name","character","credit_id","CastPage","APIKey","axios","getTrendMovies","response","data","results","getMovieByQuery","query","getMovieDetails","movieid","getMovieReviews"],"sourceRoot":""}