{"version":3,"file":"static/js/604.6105808b.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://movie-search-app/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://movie-search-app/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/Movies/Movies.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nconst Loader = () => {\n  return <SpinnerDotted color=\"#5e3e53\" />;\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"gridContainer\":\"MoviesList_gridContainer__bph18\",\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"movieItem\":\"MoviesList_movieItem__p4FQU\",\"link\":\"MoviesList_link__8rTGX\",\"itemBack\":\"MoviesList_itemBack__s52u5\",\"itemPoster\":\"MoviesList_itemPoster__oGQ6m\",\"movieRate\":\"MoviesList_movieRate__BaiZX\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\"};","import { Link } from 'react-router-dom';\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ moviesArray }) => {\n  return (\n    <div className={s.gridContainer}>\n      <ul className={s.moviesList}>\n        {moviesArray.map(item => (\n          <li key={item.id} className={s.movieItem}>\n            <Link className={s.link} to={`/movies/${item.id}`}>\n              <img\n                src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`}\n                alt={item.title}\n                className={s.itemPoster}\n              />\n              <div className={s.itemBack}>\n                <h2 className={s.movieTitle}>{item.title}</h2>\n                <h3 className={s.movieRate}>\n                  {item.vote_average.toFixed(1)}/10\n                </h3>\n              </div>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"button\":\"SearchForm_button__UXY06\",\"buttonLabel\":\"SearchForm_buttonLabel__Pnm-I\",\"input\":\"SearchForm_input__HOxJo\"};","import { FcSearch } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nconst SearchForm = ({ handleSubmit, handleInputChange, query }) => {\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.buttonLabel}>Search</span>\n          <FcSearch />\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleInputChange}\n        />\n      </form>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  query: PropTypes.string,\n};\n\nexport default SearchForm;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport toast from 'react-hot-toast';\nimport PropTypes from 'prop-types';\n\nimport { getMovieByQuery } from 'services/api';\n\nimport Loader from '../Loader';\nimport SearchForm from 'components/SearchForm';\nimport MoviesList from '../MoviesList';\n\n// Query Function\nconst GetSearchedMovie = q => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieByQuery = async () => {\n      try {\n        setStatus('pending');\n        const movies = await getMovieByQuery(q);\n        setMovies(movies);\n        setStatus('resolved');\n        movies.length === 0 &&\n          toast('There are no movies for this query. Please try another word', {\n            icon: 'ðŸ˜“',\n            style: {\n              borderRadius: '10px',\n              background: '#333',\n              color: '#fff',\n            },\n          });\n      } catch (error) {\n        setStatus('rejected');\n        setError(error);\n      }\n    };\n\n    if (!!q) {\n      fetchMovieByQuery();\n    }\n  }, [q]);\n  return { movies, status, error };\n};\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const queryWord = searchParams.get('q');\n  const { movies, status, error } = GetSearchedMovie(queryWord);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast('Enter your query please', {\n        icon: 'ðŸ˜“',\n        style: {\n          borderRadius: '10px',\n          background: '#333',\n          color: '#fff',\n        },\n      });\n    }\n    setSearchParams({ q: query });\n    setQuery('');\n  };\n\n  const handleInputChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  return (\n    <>\n      <SearchForm\n        handleSubmit={handleSubmit}\n        handleInputChange={handleInputChange}\n        query={query}\n      />\n\n      {status === 'pending' && <Loader />}\n\n      {status === 'rejected' &&\n        toast(\n          `Oops. Something went wrong. Please try again. ${error.message}`,\n          {\n            icon: 'ðŸ˜“',\n            style: {\n              borderRadius: '10px',\n              background: '#333',\n              color: '#fff',\n            },\n          }\n        )}\n      {status === 'resolved' && <MoviesList moviesArray={movies} />}\n    </>\n  );\n};\n\nGetSearchedMovie.propTypes = {\n  q: PropTypes.string.isRequired,\n};\n\nexport default Movies;\n","import Movies from '../components/Movies';\n\nexport function MoviesPage() {\n  return <Movies />;\n}\n","import axios from 'axios';\n\nconst APIKey = '9cba2b56fa6de0f8781209edaebd8957';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//https://api.themoviedb.org/3/trending/movie/day?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${APIKey}`);\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=9cba2b56fa6de0f8781209edaebd8957&query=batman\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIKey}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/54657?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieDetails = async movieid => {\n  const response = await axios.get(`/movie/${movieid}?api_key=${APIKey}`);\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/453395/credits?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieCredits = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/credits?api_key=${APIKey}`\n  );\n  return response.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/453395/reviews?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieReviews = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/reviews?api_key=${APIKey}`\n  );\n  return response.data.results;\n};\n"],"names":["SpinnerDotted","color","moviesArray","className","s","map","item","to","id","src","poster_path","alt","title","vote_average","toFixed","handleSubmit","handleInputChange","query","onSubmit","type","autoComplete","value","autoFocus","placeholder","onChange","GetSearchedMovie","q","useState","movies","setMovies","status","setStatus","error","setError","useEffect","fetchMovieByQuery","getMovieByQuery","length","toast","icon","style","borderRadius","background","propTypes","PropTypes","setQuery","useSearchParams","searchParams","setSearchParams","queryWord","get","e","preventDefault","trim","currentTarget","toLowerCase","Loader","message","MoviesList","MoviesPage","APIKey","axios","getTrendMovies","response","data","results","getMovieDetails","movieid","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}