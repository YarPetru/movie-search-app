{"version":3,"file":"static/js/119.e8b06409.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","webpack://movie-search-app/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/AdditionalInfo.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { SpinnerDotted } from 'spinners-react';\n\nconst Loader = () => {\n  return <SpinnerDotted color=\"#5e3e53\" />;\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieInfoContainer\":\"MovieDetails_movieInfoContainer__0GHa4\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"title\":\"MovieDetails_title__RBndM\",\"termsList\":\"MovieDetails_termsList__0roZU\",\"term\":\"MovieDetails_term__qhlab\",\"definition\":\"MovieDetails_definition__lJu9M\",\"buttonLink\":\"MovieDetails_buttonLink__nlwX4\",\"header\":\"MovieDetails_header__FB4jG\",\"link\":\"MovieDetails_link__wf74g\"};","import { Link, useParams } from 'react-router-dom';\nimport s from './MovieDetails.module.css';\n\nconst AdditionalInfo = () => {\n  const { movieId } = useParams();\n\n  return (\n    <>\n      <h2 className={s.header}>Additional Info</h2>\n      <ul>\n        <li>\n          <Link to={`/movies/${movieId}/cast`} className={s.link}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`} className={s.link}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default AdditionalInfo;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport AdditionalInfo from './AdditionalInfo';\nimport Loader from '../Loader';\nimport s from './MovieDetails.module.css';\n\nconst useMovieDetails = () => {\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setStatus('pending');\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n        setStatus('resolved');\n      } catch (error) {\n        setError(error);\n        setStatus('rejected');\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n  return { status, error, movie };\n};\n\nconst MovieDetails = () => {\n  const { status, error, movie } = useMovieDetails();\n  const { movieId } = useParams();\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && (\n        <p>{`There are no movies with id ${movieId}. Error: ${error}`}</p>\n      )}\n      {status === 'resolved' && (\n        <>\n          <div className={s.movieInfoContainer}>\n            <Link to=\"/\" className={s.buttonLink}>\n              <span className={s.buttonLabel}>Go Back</span>\n            </Link>\n            <img\n              className={s.poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                  : 'https://usfa.gov.ua/upload/media/2021/02/12/6026697741202-602643405e0e780013efe006.jpg'\n              }\n              alt=\"poster\"\n              width=\"300px\"\n            />\n\n            <dl className={s.termsList}>\n              <h2 className={s.title}>{movie.title}</h2>\n              <dt className={s.term}>Year:</dt>\n              <dd className={s.definition}>\n                {movie.release_date.split('-')[0]}\n              </dd>\n              <dt className={s.term}>Overview:</dt>\n              <dd className={s.definition}>{movie.overview}</dd>\n              <dt className={s.term}>Genres:</dt>\n              <dd className={s.definition}>\n                {movie.genres.map(genre => genre.name).join(', ')}\n              </dd>\n              <dt className={s.term}>User score:</dt>\n              <dd className={s.definition}>{movie.vote_average}</dd>\n            </dl>\n          </div>\n\n          <AdditionalInfo />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { Outlet } from 'react-router-dom';\nimport MovieDetails from 'components/MovieDetails';\n\nexport function MovieDetailsPage() {\n  return (\n    <>\n      <MovieDetails />\n      <Outlet />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst APIKey = '9cba2b56fa6de0f8781209edaebd8957';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n//https://api.themoviedb.org/3/trending/movie/day?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${APIKey}`);\n  return response.data.results;\n};\n\n//https://api.themoviedb.org/3/search/movie?api_key=9cba2b56fa6de0f8781209edaebd8957&query=batman\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${APIKey}&query=${query}`\n  );\n  return response.data.results;\n};\n\n// https://api.themoviedb.org/3/movie/54657?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieDetails = async movieid => {\n  const response = await axios.get(`/movie/${movieid}?api_key=${APIKey}`);\n  return response.data;\n};\n\n// https://api.themoviedb.org/3/movie/453395/credits?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieCredits = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/credits?api_key=${APIKey}`\n  );\n  return response.data.cast;\n};\n\n// https://api.themoviedb.org/3/movie/453395/reviews?api_key=9cba2b56fa6de0f8781209edaebd8957\nexport const getMovieReviews = async movieid => {\n  const response = await axios.get(\n    `/movie/${movieid}/reviews?api_key=${APIKey}`\n  );\n  return response.data.results;\n};\n"],"names":["SpinnerDotted","color","movieId","useParams","className","s","to","useState","status","setStatus","error","setError","movie","setMovie","useEffect","fetchMovieDetails","getMovieDetails","useMovieDetails","Loader","src","poster_path","alt","width","title","release_date","split","overview","genres","map","genre","name","join","vote_average","MovieDetailsPage","APIKey","axios","getTrendMovies","response","data","results","getMovieByQuery","query","movieid","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}